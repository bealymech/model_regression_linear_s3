knitr::opts_chunk$set(echo = TRUE)
tab = read.table(file='./USCrimeinfo.text', HEADER=TRUE)
tab = read.table(file="./USCrimeinfo.te", header=TRUE)
tab = read.table(file="./USCrimeinfo.txt", header=TRUE)
tab = read.table(file="./UsCrime.txt", header=TRUE)
tab = read.table(file="./UsCrimeInfo.txt", header=TRUE)
tab = read.table(file="./UsCrimeInfo.txt", header=TRUE)
tab = read.table(file="./UsCrimeInfo.txt", header=TRUE)
tab1 = read.table(file="./UsCrimeInfo.txt", header=TRUE)
tab1 = read.table(file="./UsCrimeInfo.txt", header=TRUE)
n=100;
X=cbind(((1:n)/n)^3, ((1:n)/n)^3);
Y=X%*%c(1,1)+rnorm(n)/4;
res=summary(lm(Y~X));
print(res);
print(res$coef[2,4]);
reg1=lm(Y~X[,1]);
print(summary(reg1));
reg2=lm(Y~X[,2]);
print(summary(reg2));
tab = read.table(file="./UsCrime.txt", header=TRUE)
rm(list=ls()); n=10000; p=5;
X=matrix(rnorm(n*(p)),nrow=n,ncol=p); X=scale(X)*sqrt(n/(n-1));
beta=matrix(10*rev(1:p),nrow=p,ncol=1); print(beta)
epsi=rnorm(n,1/nË†2); Y=X%*%beta +epsi;
rm(list=ls()); n=10000; p=5;
X=matrix(rnorm(n*(p)),nrow=n,ncol=p); X=scale(X)*sqrt(n/(n-1));
beta=matrix(10*rev(1:p),nrow=p,ncol=1); print(beta)
epsi=rnorm(n,1/n^2); Y=X%*%beta +epsi;
Z=cbind(Y,data.frame(X)); Z=data.frame(Z);
rm(list=ls()); n=10000; p=5;
X=matrix(rnorm(n*(p)),nrow=n,ncol=p); X=scale(X)*sqrt(n/(n-1));
beta=matrix(10*rev(1:p),nrow=p,ncol=1); print(beta)
epsi=rnorm(n,1/n^2); Y=X%*%beta +epsi;
Z=cbind(Y,data.frame(X)); Z=data.frame(Z);
rm(list=ls()); n=10000; p=5;
X=matrix(rnorm(n*(p)),nrow=n,ncol=p); X=scale(X)*sqrt(n/(n-1));
beta=matrix(10*rev(1:p),nrow=p,ncol=1); print(beta)
epsi=rnorm(n,1/n^2); Y=X%*%beta +epsi;
Z=cbind(Y, data.frame(X)); Z=data.frame(Z);
rm(list=ls()); n=10000; p=5;
X=matrix(rnorm(n*(p)),nrow=n,ncol=p); X=scale(X)*sqrt(n/(n-1));
beta=matrix(10*rev(1:p),nrow=p,ncol=1); print(beta)
epsi=rnorm(n,1/n^2);
Y=X%*%beta +epsi;
Z=cbind(Y, data.frame(X));
Z=data.frame(Z);
rm(list=ls()); n=10000; p=5;
X=matrix(rnorm(n*(p)),nrow=n,ncol=p); X=scale(X)*sqrt(n/(n-1));
beta=matrix(10*rev(1:p),nrow=p,ncol=1); print(beta)
epsi=rnorm(n,1/n^2);
Y=X%*%beta +epsi;
Z=cbind(Y, data.frame(X));
Z=data.frame(Z);
rm(list=ls()); n=10000; p=5;
X=matrix(rnorm(n*(p)),nrow=n,ncol=p); X=scale(X)*sqrt(n/(n-1));
beta=matrix(10*rev(1:p),nrow=p,ncol=1); print(beta)
epsi=rnorm(n,1/n^2);
Y=X%*%beta +epsi;
Z=cbind(Y, data.frame(X));
Z=data.frame(Z);
install.packages("lars")
library(lars)
library(lars);
modlasso=lars(X,Y,type="lasso"); attributes(modlasso);
par(mfrow=c(1,2));
plot(modlasso); plot(c(modlasso$lambda,0),pch=16,type="b",col="blue"); grid()
print(coef(modlasso));
coef=predict.lars(modlasso,X,type="coefficients",mode="lambda",s=2500);
coeflasso=coef$coefficients;
par(mfrow=c(1,1)); barplot(coeflasso,main='lasso, l=1',col='cyan');
install.packages("mlbench")
knitr::opts_chunk$set(echo = TRUE)
n=100;
X=cbind(((1:n)/n)^3, ((1:n)/n)^3);
Y=X%*%c(1,1)+rnorm(n)/4;
res=summary(lm(Y~X));
print(res);
print(res$coef[2,4]);
